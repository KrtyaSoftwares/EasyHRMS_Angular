{"version":3,"sources":["webpack:///./angularApp/app/layout/formbuilder/components/formbuilder.component.ts?14a5","webpack:///./angularApp/app/layout/formbuilder/formbuilder-routing.module.ts?56b6","webpack:///./angularApp/app/layout/formbuilder/formbuilder.module.ts?bce9","webpack:///./angularApp/app/layout/formbuilder/components/formbuilder.component.html?1e0a"],"names":[],"mappings":"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","file":"dist/17.chunk.js","sourcesContent":["import { Component, OnInit, Input, AfterViewChecked } from '@angular/core';\r\nimport {FormGroup, Validators, FormControl} from '@angular/forms';\r\nimport { FormsService } from '../../../core/services/form-defination.service';\r\nimport { Forms } from '../../../models/forms';\r\nimport { Data } from '../../../models/data';\r\n\r\n@Component({\r\n  selector: 'app-formbuilder',\r\n  template: require('./formbuilder.component.html')\r\n})\r\nexport class FormbuilderComponent implements OnInit {\r\n  final_result: any[];\r\n  result: any = {};\r\n  createArray: any[] = [];\r\n  public forms: Forms[] = [];\r\n  form: FormGroup;\r\n  payLoad = '';\r\n  public record_not_exists = false;\r\n  @Input('lookup') lookup: string;\r\n  constructor(private formsService: FormsService) {\r\n  }\r\n  ngOnInit() {\r\n    this.getTableDefination(this.lookup);\r\n  }\r\n  onSubmit() {\r\n    this.payLoad = JSON.stringify(this.form.value);\r\n    for (let key in this.form.value) {\r\n          let value = this.form.value[key];\r\n          let tempObj = {\r\n             'lookupId': this.lookup,\r\n             'fieldName': key,\r\n             'value': value\r\n         }\r\n        this.createArray.push(tempObj);\r\n     }\r\n     this.addTableData (this.lookup, this.createArray);\r\n  }\r\n addTableData(id: any, data: any) {\r\n    this.formsService\r\n            .Add(id, data)\r\n            .subscribe(\r\n             data => {\r\n                console.log(data);\r\n             });\r\n }\r\n updateTableData(id: any, data: any) {\r\n    this.formsService\r\n            .Update(id, data)\r\n            .subscribe(\r\n             data => {\r\n                console.log(data);\r\n             });\r\n }\r\n getTableDefination(id: any) {\r\n    this.formsService.GetSingle(id)\r\n        .subscribe(\r\n        data => {\r\n            this.result = data;\r\n            this.final_result = this.result['list'];\r\n            if ( this.final_result.length == 0 ) {\r\n                this.record_not_exists = true;\r\n            } else {\r\n                this.record_not_exists = false;\r\n            }\r\n            let group: any = {};\r\n            this.final_result.forEach((form: any) => {\r\n                if (form.isRequire) {\r\n                    group[form.fieldName] = new FormControl('', Validators.required);\r\n                } else {\r\n                    group[form.fieldName] = new FormControl('');\r\n                }\r\n            });\r\n            this.form = new FormGroup(group);\r\n    });\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular-router-loader/src!./~/angular2-template-loader!./~/source-map-loader!./~/tslint-loader!./angularApp/app/layout/formbuilder/components/formbuilder.component.ts","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { FormbuilderComponent } from './components/formbuilder.component';\r\n\r\nconst routes: Routes = [\r\n    { path: '', component: FormbuilderComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class FormbuilderRoutingModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular-router-loader/src!./~/angular2-template-loader!./~/source-map-loader!./~/tslint-loader!./angularApp/app/layout/formbuilder/formbuilder-routing.module.ts","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { FormbuilderComponent } from './components/formbuilder.component';\r\nimport { FormbuilderRoutingModule } from './formbuilder-routing.module';\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormbuilderRoutingModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n  ],\r\n  exports: [\r\n    FormbuilderComponent\r\n  ],\r\n  declarations: [FormbuilderComponent]\r\n})\r\nexport class FormbuilderModule { }\n\n\n// WEBPACK FOOTER //\n// ./~/angular-router-loader/src!./~/angular2-template-loader!./~/source-map-loader!./~/tslint-loader!./angularApp/app/layout/formbuilder/formbuilder.module.ts","module.exports = \"<div id=\\\"main-content\\\" >\\r\\n    <div class=\\\"row m-t-10\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"panel panel-default\\\">\\r\\n          <div class=\\\"panel-heading text-right\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm btn-icon btn-rounded btn-default\\\"><i class=\\\"fa fa-question\\\"></i> </button>\\r\\n          </div>\\r\\n          <div class=\\\"panel-body\\\">\\r\\n           <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md-12 col-sm-12 col-xs-12\\\">                                 \\r\\n                <div class=\\\"form-horizontal\\\" >\\r\\n                  <div class=\\\"boder-btm\\\">\\r\\n                    <h3 class=\\\"panel-title\\\">Branch Info</h3>\\r\\n                  </div>\\r\\n                  <div *ngIf=\\\"record_not_exists\\\">No Form found.</div>\\r\\n                  <div *ngIf=\\\"!record_not_exists\\\" class=\\\"m-b-30\\\">\\r\\n                    <form (ngSubmit)=\\\"onSubmit()\\\" [formGroup]=\\\"form\\\" *ngIf=\\\"form\\\">\\r\\n                        <div *ngFor=\\\"let question of final_result; let i = index\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                              <label class=\\\"col-sm-2 control-label\\\">\\r\\n                                  {{question.displayName ? question.displayName : question.fieldName}} <span *ngIf=\\\"question.isRequire\\\" class=\\\"asterisk\\\">*</span>\\r\\n                              </label>\\r\\n                              <div [ngSwitch]=\\\"question.fieldType\\\"  class=\\\"col-sm-4\\\">\\r\\n                                <div *ngSwitchCase=\\\"'Text'\\\">\\r\\n                                  <input \\r\\n                                      class=\\\"form-control\\\" \\r\\n                                      type=\\\"{{question.fieldType}}\\\" \\r\\n                                      id=\\\"{{question.fieldName}}\\\" \\r\\n                                      [formControlName]=\\\"question.fieldName\\\">\\r\\n                                </div>\\r\\n                              </div>\\r\\n                              <div \\r\\n                                  class=\\\"errorMessage\\\" \\r\\n                                  *ngIf=\\\"!form.controls[question.fieldName].valid\\\">*required</div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-row\\\">\\r\\n                            <button type=\\\"submit\\\" [disabled]=\\\"!form.valid\\\">Save</button>\\r\\n                        </div>\\r\\n                    </form>\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                      <div *ngIf=\\\"payLoad\\\"><strong>The form contains the following values</strong></div>\\r\\n                      <div>\\r\\n                          {{payLoad}}\\r\\n                      </div>\\r\\n                  </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\t\\t          </div>\\r\\n           </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n</div>  \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./angularApp/app/layout/formbuilder/components/formbuilder.component.html\n// module id = 368\n// module chunks = 9 17"],"sourceRoot":""}